{
  "name": "yr-weather-symbols",
  "version": "0.11.1",
  "dependencies": {
    "trait": "git://github.com/YR/trait",
    "svg": "git+ssh://git@github.com:yr/svg.git#0.1.1",
    "capabilities": "git+ssh://git@github.com:yr/capabilities.git#0.1.0",
    "ease": "git+ssh://git@github.com:yr/ease.git#0.2.0",
    "number-utilities": "git+ssh://git@github.com:yr/number-utils.git#0.2.1",
    "yr-colours": "git://github.com/YR/yr-colours",
    "lodash.map": "~2.4.0",
    "lodash.clone": "~2.4.0"
  },
  "devDependencies": {
    "requestAnimationFrame": "git://github.com/YR/requestAnimationFrame",
    "dustjs-linkedin": "~2.3.3",
    "classlist": "git+ssh://git@github.com:yr/classlist.git#0.3.1",
    "style": "git+ssh://git@github.com:yr/style.git#0.8.1",
    "lodash.foreach": "~2.4.0",
    "buddy": "~1.0.0",
    "casperjs": "~1.1.0-beta3",
    "mocha": "*",
    "expect.js": "*",
    "mocha-sauce": "git://github.com/pbakaus/mocha-sauce.git",
    "term-canvas": "*"
  },
  "scripts": {
    "convert": "mkdir temp && casperjs src/convert.js temp && pngcrush -d dist/png temp/* && rm -Rf temp && cd dist && zip -r png.zip png ",
    "test": "buddy build && mocha-phantomjs test/test-runner.html",
    "sauce": "node test/sauce.js"
  },
  "main": "src/js/weatherSymbol",
  "repository": "https://github.com/YR/yr-weather-symbols.git",
  "license": "MIT",
  "private": true,
  "buddy": {
    "build": {
      "js": {
        "sources": ["src/js"],
        "targets": [
          {
            "input": "src/js/index.js",
            "output": "index.js",
            "boilerplate": true,
            "bootstrap": true,
            "alias": {
              "dust": "./node_modules/dustjs-linkedin/dist/dust-core.js"
            }
          },
          {
            "input": "src/js/weatherSymbol.js",
            "output": "test/weatherSymbol.js",
            "boilerplate": true,
            "bootstrap": true
          }
        ]
      },
      "css": {
        "sources": ["src/css"],
        "targets": [
          {
            "input": "src/css",
            "output": "."
          }
        ]
      },
      "html": {
        "sources": ["src/html"],
        "targets": [
          {
            "input": "src/html/",
            "output": "."
          }
        ]
      }
    },
    "settings": {
      "server": {
        "directory": ".",
        "port": 8080
      }
    }
  }
}
